// Класс "Список карточек"
class List extends Renderable {

  // Объект с конфигурацией селекторов, чтобы не хардкодить их в методах.
  static selectors = {
    template: '#todo-list-template',
  }

  constructor(cards) {
    // В родительском конструкторе создаём элемент из шаблона и кладём его в this._element
    super(List.selectors.template);
    // Сохраняем список первоначальных карточек для использования в других методах класса
    this._cards = cards;
  }

  render(where) {
    // Перегружаем метод `render`, чтобы перед вставкой на страницу списка карточек (который пока что пуст)
    // отрендерить в него каждую карточку.
    this._cards.forEach(this.add);
    // Все карточки отрендерены в список, теперь можно вставлять его в переданный контейнер `where`.
    super.render(where);
  }

  // Метод добавления новой карточки
  // Обратите внимание на форму записи этого метода - стрелочную функцию.
  // Это специальный синтаксис, который позволяет намертво закрепить значение `this` в методе.
  // Здесь это требуется, т.к. метод передаётся как аргумент при вызове других функций.
  add = (name) => {
    // Создаём объект карточки. В его конструктор передаём текст, который будет отображён на карточке,
    // а также метод, который будет использован для клонировани карточки.
    // Обратите внимание, что мы передаём *тот же метод*, в котором мы находимся - так можно делать!
    const card = new Card(name, this.add);
    // Рендерим карточку в контейнер списка карточек.
    card.render(this._element);
  }
}
